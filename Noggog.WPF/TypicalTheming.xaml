<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Noggog.WPF"
    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <Style x:Key="Noggog.Styles.Button.Background" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.MouseOverBorder}" />
        <Setter Property="Controls:ControlsHelper.FocusBorderThickness" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Controls:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush), Mode=OneWay}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderThickness), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Noggog.Styles.Button" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Controls:ControlsHelper.ContentCharacterCasing" Value="Upper" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonNakedIconForegroundBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Controls:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonNakedIconOverForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonNakedIconPressedForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="Noggog.Styles.TextBox"
        BasedOn="{StaticResource MahApps.Styles.TextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="3" />
        <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="Transparent" />
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="Transparent" />
        <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
        <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22" />
        <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
        <Setter Property="Controls:TextBoxHelper.WatermarkWrapping" Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                            <Border
                                x:Name="PART_WaitingForDataEffectGrid"
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                                Effect="{DynamicResource MahApps.DropShadowEffect.WaitingForData}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </AdornerDecorator>

                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ScrollViewer Grid.Row="1" Grid.Column="0"
                                x:Name="PART_ContentHost"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <TextBlock Grid.Row="1" Grid.Column="0"
                                x:Name="PART_Message"
                                Margin="4,0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}"
                                TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}"
                                Visibility="Collapsed" />

                            <ContentControl Grid.Row="0" Grid.Column="0"
                                x:Name="PART_FloatingMessageContainer"
                                Margin="4,0"
                                Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{Converters:MathMultiplyConverter}">
                                        <Binding
                                            ElementName="PART_FloatingMessage"
                                            Mode="OneWay"
                                            Path="ActualHeight" />
                                        <Binding
                                            ElementName="PART_FloatingMessageContainer"
                                            Mode="OneWay"
                                            Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock
                                    x:Name="PART_FloatingMessage"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                    Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                    TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                    TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{Converters:MathSubtractConverter}">
                                                    <Binding
                                                        ElementName="PART_FloatingMessage"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                    <Binding
                                                        ElementName="PART_FloatingMessageContainer"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>

                            <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
                                x:Name="PART_ClearText"
                                Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}"
                                Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}"
                                Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}"
                                ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}"
                                FocusVisualStyle="{x:Null}"
                                FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>

                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_ClearText" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="Base" Property="Background" Value="{DynamicResource TextBoxFocusBackgroundBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Visible" />
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.WaitingForData}" />
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                        <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
    </Style>

    <Style
        x:Key="Noggog.Styles.TextBoxStyleless"
        BasedOn="{StaticResource Noggog.Styles.TextBox}"
        TargetType="TextBox">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{x:Null}" />
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Grid x:Name="PART_InnerGrid">
                            <ScrollViewer Grid.Row="1" Grid.Column="0"
                                x:Name="PART_ContentHost"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="Noggog.Styles.TextBox.ErrorState"
        BasedOn="{StaticResource Noggog.Styles.TextBox}"
        TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid ClipToBounds="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="16" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Grid.ColumnSpan="2"
                            x:Name="PART_ErrorGlow"
                            Fill="{DynamicResource WarningBrush}"
                            Opacity="0.3"
                            Visibility="Collapsed">
                            <Rectangle.Effect>
                                <BlurEffect Radius="15" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Grid.Column="0" Grid.ColumnSpan="2"
                            x:Name="PART_BackgroundCornerFillIn"
                            Margin="0,0,5,0"
                            Background="{DynamicResource MahApps.Brushes.Control.Background}"
                            CornerRadius="3" />

                        <ScrollViewer Grid.Column="0"
                            x:Name="PART_ContentHost"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            VerticalAlignment="Stretch"
                            Background="{x:Null}"
                            BorderThickness="0"
                            IsTabStop="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <TextBlock Grid.Column="0"
                            x:Name="PART_Message"
                            Margin="4,0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                            Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                            TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                            TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}"
                            TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}"
                            Visibility="Collapsed" />

                        <ContentControl Grid.Column="0"
                            x:Name="PART_FloatingMessageContainer"
                            Margin="4,0"
                            Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                            <ContentControl.Height>
                                <MultiBinding Converter="{Converters:MathMultiplyConverter}">
                                    <Binding
                                        ElementName="PART_FloatingMessage"
                                        Mode="OneWay"
                                        Path="ActualHeight" />
                                    <Binding
                                        ElementName="PART_FloatingMessageContainer"
                                        Mode="OneWay"
                                        Path="Opacity" />
                                </MultiBinding>
                            </ContentControl.Height>
                            <TextBlock
                                x:Name="PART_FloatingMessage"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                Text="{TemplateBinding Controls:TextBoxHelper.Watermark}"
                                TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}"
                                TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}">
                                <TextBlock.RenderTransform>
                                    <TranslateTransform x:Name="FloatingMessageTransform">
                                        <TranslateTransform.Y>
                                            <MultiBinding Converter="{Converters:MathSubtractConverter}">
                                                <Binding
                                                    ElementName="PART_FloatingMessage"
                                                    Mode="OneWay"
                                                    Path="ActualHeight" />
                                                <Binding
                                                    ElementName="PART_FloatingMessageContainer"
                                                    Mode="OneWay"
                                                    Path="ActualHeight" />
                                            </MultiBinding>
                                        </TranslateTransform.Y>
                                    </TranslateTransform>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </ContentControl>

                        <Grid Grid.Column="1" HorizontalAlignment="Right">
                            <Border
                                x:Name="PART_RightSideErrorBlock"
                                Width="5"
                                Margin="3,1,0,1"
                                HorizontalAlignment="Right"
                                Background="{DynamicResource WarningBrush}"
                                CornerRadius="2"
                                ToolTip="{TemplateBinding local:ControlsHelper.ErrorTooltip}" />
                            <Border
                                x:Name="PART_RightSideErrorBlockShadow"
                                Width="10"
                                HorizontalAlignment="Left"
                                Background="{DynamicResource MahApps.Brushes.Control.Background}"
                                CornerRadius="3">
                                <Border.Effect>
                                    <DropShadowEffect
                                        BlurRadius="3"
                                        Direction="0"
                                        Opacity="0.5"
                                        ShadowDepth="2" />
                                </Border.Effect>
                            </Border>
                        </Grid>
                        <Border Grid.Column="0" Grid.ColumnSpan="2"
                            x:Name="PART_ErrorBorder"
                            Background="Transparent"
                            BorderBrush="{DynamicResource WarningBrush}"
                            BorderThickness="1"
                            CornerRadius="3"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Border Grid.Column="0" Grid.ColumnSpan="2"
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_BackgroundCornerFillIn" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_BackgroundCornerFillIn" Property="Background" Value="{DynamicResource TextBoxFocusBackgroundBrush}" />
                            <Setter TargetName="PART_RightSideErrorBlockShadow" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_RightSideErrorBlockShadow" Property="Background" Value="{DynamicResource TextBoxFocusBackgroundBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(local:ControlsHelper.InError)}" Value="True">
                            <Setter TargetName="PART_ErrorGlow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ErrorBorder" Property="Visibility" Value="Visible" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="PART_ErrorGlow"
                                            Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                            To="#967400"
                                            Duration="0:0:0.8" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_RightSideErrorBlock"
                                            Storyboard.TargetProperty="Width"
                                            To="13"
                                            Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"
                                            Storyboard.TargetName="PART_ErrorBorder"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="#967400"
                                            Duration="0:0:0.8" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_RightSideErrorBlock"
                                            Storyboard.TargetProperty="Width"
                                            To="5"
                                            Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Noggog.Styles.Checkbox" TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUnchecked}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUnchecked}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundChecked" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundChecked}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundCheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundCheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundCheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundCheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundCheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundCheckedPressed}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundIndeterminate" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminate}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundIndeterminateDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminateDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundIndeterminateMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminateMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundIndeterminatePressed" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminatePressed}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundUnchecked" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUnchecked}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUncheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUncheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.BackgroundUncheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUncheckedPressed}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushChecked" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushChecked}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushCheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushCheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushCheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushCheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushCheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushCheckedPressed}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushIndeterminate" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminate}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushIndeterminateDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminateDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushIndeterminateMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminateMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushIndeterminatePressed" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminatePressed}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushUnchecked" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUnchecked}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUncheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUncheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.BorderBrushUncheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUncheckedPressed}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillChecked" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillCheckedDisabled" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillCheckedMouseOver" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillCheckedPressed" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillIndeterminate" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillIndeterminateDisabled" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillIndeterminateMouseOver" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillIndeterminatePressed" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillUnchecked" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundFillUncheckedPressed" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeChecked" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeCheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeCheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeCheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminate" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminateDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminateMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminatePressed" Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeUnchecked" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckBackgroundStrokeUncheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphCheckedTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path
                        Width="12"
                        Height="10"
                        Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Foreground}"
                        Stretch="Fill"
                        UseLayoutRounding="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundChecked" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedDisabled" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminate" Value="{DynamicResource MahApps.Brushes.Gray3}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminateDisabled" Value="{DynamicResource MahApps.Brushes.Gray3}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminateMouseOver" Value="{DynamicResource MahApps.Brushes.Gray2}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminatePressed" Value="{DynamicResource MahApps.Brushes.Gray2}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundUnchecked" Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUnchecked}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUncheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUncheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphForegroundUncheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUncheckedPressed}" />
        <Setter Property="Controls:CheckBoxHelper.CheckGlyphIndeterminateTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle
                        Width="8"
                        Height="3"
                        Fill="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Foreground}"
                        UseLayoutRounding="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Controls:CheckBoxHelper.ForegroundChecked" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundChecked}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundCheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundCheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundCheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundCheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundCheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundCheckedPressed}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundIndeterminate" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminate}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundIndeterminateDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminateDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundIndeterminateMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminateMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundIndeterminatePressed" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminatePressed}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUnchecked" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUnchecked}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUncheckedDisabled" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUncheckedDisabled}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUncheckedMouseOver" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUncheckedMouseOver}" />
        <Setter Property="Controls:CheckBoxHelper.ForegroundUncheckedPressed" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUncheckedPressed}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUnchecked}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Border
                            x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Controls:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="LeftCol" Width="Auto" />
                                <ColumnDefinition x:Name="RightCol" Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0"
                                x:Name="Check"
                                Width="{TemplateBinding Controls:CheckBoxHelper.CheckSize}"
                                Height="{TemplateBinding Controls:CheckBoxHelper.CheckSize}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Rectangle
                                    x:Name="NormalRectangle"
                                    Fill="{TemplateBinding Controls:CheckBoxHelper.CheckBackgroundFillUnchecked}"
                                    Stroke="{TemplateBinding Controls:CheckBoxHelper.CheckBackgroundStrokeUnchecked}"
                                    StrokeThickness="{TemplateBinding Controls:CheckBoxHelper.CheckStrokeThickness}"
                                    UseLayoutRounding="False" />
                                <ContentControl
                                    x:Name="CheckGlyph"
                                    Content="{TemplateBinding Controls:CheckBoxHelper.CheckGlyphUnchecked}"
                                    ContentTemplate="{TemplateBinding Controls:CheckBoxHelper.CheckGlyphUncheckedTemplate}"
                                    FocusVisualStyle="{x:Null}"
                                    Foreground="{TemplateBinding Controls:CheckBoxHelper.CheckGlyphForegroundUnchecked}"
                                    IsTabStop="False" />
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                x:Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="{TemplateBinding Controls:ControlsHelper.RecognizesAccessKey}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--  UncheckedNormal  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUnchecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUncheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundUnchecked)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundUnchecked)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillUnchecked)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeUnchecked)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundUnchecked)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushUnchecked)}" />
                        </MultiTrigger>
                        <!--  UncheckedMouseOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUnchecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUncheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundUncheckedMouseOver)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundUncheckedMouseOver)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundUncheckedMouseOver)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushUncheckedMouseOver)}" />
                        </MultiTrigger>
                        <!--  UncheckedPressed  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUnchecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUncheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundUncheckedPressed)}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundUncheckedPressed)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillUncheckedPressed)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeUncheckedPressed)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundUncheckedPressed)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushUncheckedPressed)}" />
                        </MultiTrigger>
                        <!--  UncheckedDisabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUnchecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphUncheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundUncheckedDisabled)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundUncheckedDisabled)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeUncheckedDisabled)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundUncheckedDisabled)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushUncheckedDisabled)}" />
                        </MultiTrigger>

                        <!--  CheckedNormal  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphChecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphCheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundChecked)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundChecked)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillChecked)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeChecked)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundChecked)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushChecked)}" />
                        </MultiTrigger>
                        <!--  CheckedMouseOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphChecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphCheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundCheckedMouseOver)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillCheckedMouseOver)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeCheckedMouseOver)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundCheckedMouseOver)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushCheckedMouseOver)}" />
                        </MultiTrigger>
                        <!--  CheckedPressed  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphChecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphCheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundCheckedPressed)}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundCheckedPressed)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillCheckedPressed)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeCheckedPressed)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundCheckedPressed)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushCheckedPressed)}" />
                        </MultiTrigger>
                        <!--  CheckedDisabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphChecked)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphCheckedTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundCheckedDisabled)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundCheckedDisabled)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillCheckedDisabled)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeCheckedDisabled)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundCheckedDisabled)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushCheckedDisabled)}" />
                        </MultiTrigger>

                        <!--  IndeterminateNormal  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminate)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminate)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundIndeterminate)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillIndeterminate)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminate)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundIndeterminate)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushIndeterminate)}" />
                        </MultiTrigger>
                        <!--  IndeterminateMouseOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminate)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminateMouseOver)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundIndeterminateMouseOver)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillIndeterminateMouseOver)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminateMouseOver)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundIndeterminateMouseOver)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushIndeterminateMouseOver)}" />
                        </MultiTrigger>
                        <!--  IndeterminatePressed  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminate)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminatePressed)}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundIndeterminatePressed)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillIndeterminatePressed)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminatePressed)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundIndeterminatePressed)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushIndeterminatePressed)}" />
                        </MultiTrigger>
                        <!--  IndeterminateDisabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckGlyph" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminate)}" />
                            <Setter TargetName="CheckGlyph" Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}" />
                            <Setter TargetName="CheckGlyph" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckGlyphForegroundIndeterminateDisabled)}" />
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.ForegroundIndeterminateDisabled)}" />
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundFillIndeterminateDisabled)}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.CheckBackgroundStrokeIndeterminateDisabled)}" />
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BackgroundIndeterminateDisabled)}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:CheckBoxHelper.BorderBrushIndeterminateDisabled)}" />
                        </MultiTrigger>

                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="Check" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="Controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                            <Setter TargetName="Check" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPresenter" Property="Grid.Column" Value="0" />
                            <Setter TargetName="LeftCol" Property="Width" Value="*" />
                            <Setter TargetName="RightCol" Property="Width" Value="Auto" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="Padding" Value="0,0,6,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Noggog.Styles.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Controls:ContentControlEx
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray6}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray7}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="Noggog.Styles.ListBox"
        BasedOn="{StaticResource MahApps.Styles.ListBox.Virtualized}"
        TargetType="ListBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>


    <Style
        x:Key="Noggog.Styles.ComboBox"
        BasedOn="{StaticResource MahApps.Styles.ComboBox}"
        TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style
        x:Key="Noggog.Styles.ListBoxItem"
        BasedOn="{StaticResource MahApps.Styles.ListBoxItem}"
        TargetType="ListBoxItem">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
    </Style>

    <Style
        x:Key="Noggog.Styles.ListBoxItem.Plain"
        BasedOn="{StaticResource MahApps.Styles.ListBoxItem}"
        TargetType="ListBoxItem">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
        <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
        <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="Transparent" />
        <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="Transparent" />
        <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
    </Style>

    <Style x:Key="Noggog.Styles.ItemsControl" TargetType="ItemsControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style x:Key="Noggog.Styles.ListBox.Terminal" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#292929" />
        <Setter Property="BorderBrush" Value="#292929" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource TerminalListBoxItemStyle}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" FocusVisualStyle="{x:Null}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Noggog.Styles.ListBoxItem.Terminal" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedListItem}" />
                            <Setter Property="Foreground" Value="{StaticResource SelectedListItemForeground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource MouseOverListItem}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledMenuForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Defaults  -->
    <Style BasedOn="{StaticResource Noggog.Styles.Button}" TargetType="{x:Type Button}" />
    <Style BasedOn="{StaticResource Noggog.Styles.ToggleButton}" TargetType="{x:Type ToggleButton}" />
    <Style BasedOn="{StaticResource Noggog.Styles.ListBox}" TargetType="ListBox" />
    <Style BasedOn="{StaticResource Noggog.Styles.ListBoxItem}" TargetType="ListBoxItem" />
    <Style BasedOn="{StaticResource Noggog.Styles.TextBox}" TargetType="TextBox" />
    <Style BasedOn="{StaticResource Noggog.Styles.ItemsControl}" TargetType="ItemsControl" />
    <Style BasedOn="{StaticResource Noggog.Styles.ComboBox}" TargetType="ComboBox" />

    <!--  Colors  -->
    <Color x:Key="Yellow">#ffc400</Color>
    <Color x:Key="YellowDark">#967400</Color>
    <Color x:Key="Red">#e83a40</Color>
    <Color x:Key="RedBackground">#912327</Color>
    <Color x:Key="PinkRedForeground">#f2c2bd</Color>
    <Color x:Key="Green">#52b545</Color>
    <Color x:Key="FocusedBackground">#FF080808</Color>
    <Color x:Key="GreenBackground">#295c23</Color>
    <Color x:Key="Success">#52b545</Color>

    <Color x:Key="Error">#e83a40</Color>
    <Color x:Key="ErrorLight">#e65358</Color>
    <Color x:Key="ErrorDark">#d92b32</Color>
    <Color x:Key="ErrorHover">#e65358</Color>
    <Color x:Key="ErrorPressed">#d92b32</Color>
    <Color x:Key="Warning">#ffc400</Color>
    <Color x:Key="WarningDark">#967400</Color>

    <!--  Brushes  -->
    <SolidColorBrush x:Key="ForegroundDarkBrush" Color="{StaticResource MahApps.Colors.Gray3}" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource MahApps.Colors.ThemeBackground}" />
    <SolidColorBrush x:Key="BackgroundLightBrush" Color="#323232" />
    <SolidColorBrush x:Key="BackgroundDarkBrush" Color="#202020" />
    <SolidColorBrush x:Key="YellowBrush" Color="{StaticResource Yellow}" />
    <SolidColorBrush x:Key="YellowDarkBrush" Color="{StaticResource YellowDark}" />
    <SolidColorBrush x:Key="GreenBrush" Color="{StaticResource Green}" />
    <SolidColorBrush x:Key="GreenBackgroundBrush" Color="{StaticResource GreenBackground}" />
    <SolidColorBrush x:Key="RedBrush" Color="{StaticResource Red}" />
    <SolidColorBrush x:Key="RedBackgroundBrush" Color="{StaticResource RedBackground}" />
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource Warning}" />
    <SolidColorBrush x:Key="WarningDarkBrush" Color="{StaticResource WarningDark}" />
    <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource Success}" />
    <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource Error}" />
    <SolidColorBrush x:Key="ErrorLightBrush" Color="{StaticResource PinkRedForeground}" />
    <SolidColorBrush x:Key="ErrorHoverBrush" Color="{StaticResource ErrorHover}" />
    <SolidColorBrush x:Key="ErrorPressedBrush" Color="{StaticResource ErrorPressed}" />
    <SolidColorBrush x:Key="ErrorBackgroundBrush" Color="{StaticResource RedBackground}" />
    <SolidColorBrush x:Key="ControlFocusBrush" Color="{StaticResource FocusedBackground}" />
    <SolidColorBrush x:Key="ButtonNakedIconOverForegroundBrush" Color="{StaticResource MahApps.Colors.ThemeForeground}" />
    <SolidColorBrush x:Key="ButtonNakedIconForegroundBrush" Color="{StaticResource MahApps.Colors.Gray6}" />
    <SolidColorBrush x:Key="ButtonNakedIconPressedForegroundBrush" Color="{StaticResource MahApps.Colors.AccentBase}" />
    <SolidColorBrush
        x:Key="MahApps.Brushes.Control.Background"
        options:Freeze="True"
        Color="#FF101010" />
    <SolidColorBrush
        x:Key="MahApps.Brushes.TextBox.Border"
        options:Freeze="True"
        Color="Transparent" />
    <!--  Gray2  -->
    <SolidColorBrush
        x:Key="MahApps.Brushes.TextBox.FocusBorder"
        options:Freeze="True"
        Color="Transparent" />
    <!--  Gray8  -->
    <SolidColorBrush
        x:Key=" MahApps.Brushes.Border.NonActive"
        options:Freeze="True"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="FocusBackgroundBrush"
        options:Freeze="True"
        Color="{StaticResource FocusedBackground}" />
    <SolidColorBrush
        x:Key="TextBoxFocusBackgroundBrush"
        options:Freeze="True"
        Color="{StaticResource FocusedBackground}" />
    <SolidColorBrush
        x:Key="MahApps.Brushes.TextBox.MouseOverBorder"
        options:Freeze="True"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="SubtleBorderBrush"
        options:Freeze="True"
        Color="#404040" />
    <SolidColorBrush
        x:Key="ControlsDisabledBrush"
        options:Freeze="True"
        Color="#35FFFFFF" />
</ResourceDictionary>
